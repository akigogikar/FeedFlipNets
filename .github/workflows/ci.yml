name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint-test:
    name: Lint and unit tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    env:
      PYTHONUNBUFFERED: "1"
      FEEDFLIP_DATA_OFFLINE: "1"
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements-lock.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-lock.txt
          pip install -e .

      - name: Run ruff
        run: ruff check cli feedflipnets scripts tests

      - name: Run flake8
        run: flake8 cli feedflipnets scripts tests

      - name: Check formatting with black
        run: black --check cli feedflipnets scripts tests

      - name: Unit tests
        run: pytest -q

  smoke:
    name: Preset smoke tests
    runs-on: ubuntu-latest
    needs: lint-test
    env:
      PYTHONUNBUFFERED: "1"
      FEEDFLIP_DATA_OFFLINE: "1"
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-smoke-${{ hashFiles('requirements-lock.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-lock.txt
          pip install -e .

      - name: Run preset smoke tests
        run: |
          set -euo pipefail
          rm -rf runs
          mkdir -p runs
          presets=(mnist_mlp_dfa ucr_gunpoint_mlp_dfa california_housing_mlp_dfa 20newsgroups_bow_mlp_dfa)
          for preset in "${presets[@]}"; do
            echo "::group::smoke-${preset}"
            python -m cli.main --preset "$preset" --offline
            echo "::endgroup::"
          done

      - name: Upload metrics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-metrics
          path: |
            runs/**/metrics_*
          if-no-files-found: warn
